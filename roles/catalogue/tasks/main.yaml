- name: Disable old Node.js and enable Node.js:18
  ansible.builtin.shell: "dnf module disable nodejs -y ; dnf module enable nodejs:18 -y"

- name: Install Node.js
  ansible.builtin.package:
    name: nodejs
    state: present

- name: Create roboshop user
  ansible.builtin.user:
    name: roboshop

- name: Recursively remove app directory
  ansible.builtin.file:
    path: /app
    state: absent

- name: Create app directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: Download catalogue application
  ansible.builtin.get_url:
    url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
    dest: /tmp

- name: Extract catalogue application
  ansible.builtin.unarchive:
    src: /tmp/catalogue.zip
    dest: /app
    remote_src: yes

- name: Install npm
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: Copy catalogue.service
  ansible.builtin.copy:
    src: catalogue.service
    dest: /etc/systemd/system/catalogue.service

- name: System daemon reload and start
  ansible.builtin.systemd_service:
    daemon_reload: yes

- name: Copy mongodb.repo
  ansible.builtin.copy:
    src: mongodb.repo
    dest: /etc/yum.repos.d/mongodb.repo

- name: Install MongoDB client
  ansible.builtin.package:
    name: mongodb-org-shell 
    state: present

- name: Get the categories count
  ansible.builtin.command:  mongo --host mongodb.prudhvi.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
  register: product_count

- name: Load catalogue data
  ansible.builtin.command: mongo --host mongodb.prudhvi.online < /app/schema/catalogue.js
  when: product_count.stdout == "0"

- name: Start and enable catalogue
  ansible.builtin.service:
    name: catalogue
    state: restarted
    enabled: yes